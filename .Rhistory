hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] }))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["unmatched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["unmatched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1",] }))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] }))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })))
source('scripts/DiDiD.R'
)
source('scripts/DiDiD.R')
montecarlo
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
source('scripts/DiDiD.R')
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["unmatched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["unmatched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
abline(v = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })
abline(v = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"])
abline(h = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"])
abline(v = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"], h = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"])
abline(h = 0.05)
abline(h = 0.1)
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
abline(v = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"], h = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"])
abline(h = 0.1)
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))[which(x < 0.05)]
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))[]
with(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })), subset())
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })), subset())
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
p <- unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] }))
p
p[which(p < 0.05)]
match(p[which(p < 0.05)], p)
e <- unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] }))
e[match(p[which(p < 0.05)], p)]
Map(cbind, ldf, treatment = lapply(ldf, function(df) { df$treatment <- ifelse(df$flood == 1,1,0) }))
ldf
ldf[[1]]
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })), unlist(lapply(montecarlo, function(x) { nrow(x[["model_summary"]][["matched_data"]]) })))
nrow(x[["model_summary"]][["matched_data"]])
nrow(montecarlo[[1][["model_summary"]][["matched_data"]])
nrow(montecarlo[[1]][["model_summary"]][["matched_data"]])
montecarlo[[1]][["model_summary"]][["matched_data"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["df"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["df"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["call"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["terms"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["sigma"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["fstatistic"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["residuals"]]
nrow(montecarlo[[1]][["model_summary"]][["matched_data"]][["residuals"]])
length(montecarlo[[1]][["model_summary"]][["matched_data"]][["residuals"]])
montecarlo[[1]][["model_summary"]][["matched_data"]][["fstatistic"]]
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })), unlist(lapply(montecarlo, function(x) { length(x[["model_summary"]][["matched_data"]][[residuals]]) })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] })), unlist(lapply(montecarlo, function(x) { length(x[["model_summary"]][["matched_data"]][["residuals"]]) })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Std. Error"] }))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["f.statistic"]] }))
montecarlo[[1]][["model_summary"]][["matched_data"]][["f.statistic"]]
montecarlo[[1]][["model_summary"]][["matched_data"]][["fstatistic"]]
lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]] })
lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]]["value"] })
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]]["value"] }))
montecarlo[[1]][["model_summary"]][["matched_data"]][["fstatistic"]]["value"]
montecarlo[[1]][["model_summary"]][["matched_data"]][["fstatistic"]][["value"]]
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]][["value"] }))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]][["value"]] }))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["fstatistic"]][["value"]] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["r.squared"]][["value"]] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["r.squared"]] })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["r.squared"]] }))
montecarlo[[1]][["model_summary"]][["unmatched_data"]][["r.squared"]]
montecarlo[[1]][["model_summary"]][["unmatched_data"]][["adj.r.squared"]]
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["adj.r.squared"]] }))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["adj.r.squared"]] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"] })))
abline(v = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Estimate"], h = montecarlo[[1]][["model_summary"]][["matched_data"]][["coefficients"]]["after_flood1:flood1","Pr(>|t|)"])
abline(h = 0.1)
p[which(p < 0.05)]
match(p[which(p < 0.05)], p)
e[match(p[which(p < 0.05)], p)]
montecarlo[20]
montecarlo[66]
e[match(p[which(p < 0.1)], p)]
match(p[which(p < 0.1)], p)
montecarlo[45]
match(p[which(p < 0.1)], p)
montecarlo[3]
doDescriptives <- function(data, des_vars) {
data <- as.data.frame(as.numeric(as.character(x[des_vars])))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doDescriptives(F_NF, des_vars)
doDescriptives(F_NF, des_vars)
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(as.numeric(as.character(x[des_vars])))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doDescriptives(F_NF, des_vars)
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(as.numeric(as.character(data[des_vars])))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doDescriptives(F_NF, des_vars)
F_NF[des_vars]
doDescriptives(F_NF, des_vars)
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(as.numeric(as.character(data[des_vars])))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
as.character(F_NF[des_vars])
as.numeric(as.character(F_NF[des_vars]))
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(as.numeric(as.character(data[des_vars])))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(lapply(data[des_vars], function(x) { as.numeric(as.character(x)) }))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doDescriptives(F_NF, des_vars)
doRegression <- function(data, model_formula, partial_strings) {
fit <- lm(model_formula, data = data)
partials <- partial_resid_numeric_analysis(partial_strings, fit, data)
return(list('fit' = fit, 'partials' = partials))
}
doRegression(F_NF, model_formula )
model_formula <- as.formula(paste("ln_sale_price ~ flood_prone + ",model_all))
doRegression(F_NF, model_formula, partial_strings)
F_NF
model_formula         <- as.formula(paste("ln_sale_price ~ flood_prone + ",model_all))
partial_vars          <- c("flood_prone", model_vars[-1])
partial_strings       <- c("flood_prone", model_strings[-1])
doRegression(F_NF, model_formula, partial_strings)
fit <- lm(model_formula, data = F_NF)
model_formula
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1,0\
) }))
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1,0) }))
source('scripts/baseline_analysis_prep.R')
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1,0) }))
F1
doRegression(flood_data_subsets[[1]], model_formula, partial_strings)
doRegression <- function(data, model_formula, partial_strings) {
fit <- lm(model_formula, data = data)
partials <- partial_resid_numeric_analysis(partial_strings, fit, data)
return(list('fit' = fit, 'partials' = partials))
}
doRegression(flood_data_subsets[[1]], model_formula, partial_strings)
model_formula         <- as.formula(paste("ln_sale_price ~ flood_prone + ",model_all))
partial_vars          <- c("flood_prone", model_vars[-1])
partial_strings       <- c("flood_prone", model_strings[-1])
doRegression(flood_data_subsets[[1]], model_formula, partial_strings)
source('scripts/D.R')
source('scripts/D.R')
results
results[["F1"]]
results[["F2"]]
results[["F3"]]
results[["F2"]]
D_match <- function(df) {
## Do matching on before_flood and after_flood groups #
m <- matchSamples(df)
## Send matched outputs to some variables #
m_out            <- m[[1]]
m_data           <- m[[2]]
m_matches        <- m[[3]]
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(m_data, des_vars)
## Do the linear regression on the pre and post matched samples #
model            <- doRegression(m_data, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
## Summarise post match balance improvement
bal_sum_std      <- summary(m_out, standardize=TRUE)
return(list(
'match_output' = m_out,
'match_data' = m_data,
'match_matches' = m_matches,
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary
'balance_summary_standardised' = bal_sum_std
))
}
D_match <- function(df) {
## Do matching on before_flood and after_flood groups #
m <- matchSamples(df)
## Send matched outputs to some variables #
m_out            <- m[[1]]
m_data           <- m[[2]]
m_matches        <- m[[3]]
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(m_data, des_vars)
## Do the linear regression on the pre and post matched samples #
model            <- doRegression(m_data, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
## Summarise post match balance improvement
bal_sum_std      <- summary(m_out, standardize=TRUE)
return(list(
'match_output' = m_out,
'match_data' = m_data,
'match_matches' = m_matches,
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary,
'balance_summary_standardised' = bal_sum_std
))
}
model_formula         <- as.formula(paste("ln_sale_price ~ flood_prone + ",model_all))
partial_vars      <- c("flood_prone", model_vars[-1])
partial_strings       <- c("flood_prone", model_strings[-1])
D_match(flood_sub_1, model_formula, partial_strings)
D_match(flood_sub_1)
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1,0) }))
flood_data_subsets[["F1"]]
D_match(flood_data_subsets[["F2"]])
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(lapply(data[des_vars], function(x) { as.numeric(as.character(x)) }))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doRegression <- function(data, model_formula, partial_strings) {
fit <- lm(model_formula, data = data)
partials <- partial_resid_numeric_analysis(partial_strings, fit, data)
return(list('fit' = fit, 'partials' = partials))
}
D_match(flood_data_subsets[["F2"]])
doDescriptives <- function(data, des_vars) {
x <- as.data.frame(lapply(data[des_vars], function(x) { as.numeric(as.character(x)) }))
descriptives <- c('mean', 'median', 'sd', 'min', 'max')
df <- data.frame(matrix(, nrow = ncol(x), ncol = 0))
for(i in descriptives) {
df[,i] <- sapply(x, i, na.rm = TRUE)
}
rownames(df) <- colnames(x)
return(df)
}
doRegression <- function(x, model_formula, partial_strings) {
fit <- lm(model_formula, data = x)
partials <- partial_resid_numeric_analysis(partial_strings, fit, x)
return(list('fit' = fit, 'partials' = partials))
}
D_match <- function(df) {
start.time <- Sys.time()
## Do matching on before_flood and after_flood groups #
m <- matchSamples(df)
## Send matched outputs to some variables #
m_out            <- m[[1]]
m_data           <- m[[2]]
m_matches        <- m[[3]]
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(m_data, des_vars)
## Do the linear regression on the pre and post matched samples #
model            <- doRegression(m_data, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
## Summarise post match balance improvement
bal_sum_std      <- summary(m_out, standardize=TRUE)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
return(list(
'match_output' = m_out,
'match_data' = m_data,
'match_matches' = m_matches,
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary,
'balance_summary_standardised' = bal_sum_std
))
}
D_match(flood_data_subsets[["F1"]])
data <- data.frame()
D_match(flood_data_subsets[["F1"]])
D_match(flood_data_subsets[["F1"]])
doRegression <- function(data, model_formula, partial_strings) {
fit <- lm(model_formula, data = data)
partials <- partial_resid_numeric_analysis(partial_strings, fit, data)
return(list('fit' = fit, 'partials' = partials))
}
D_match(flood_data_subsets[["F1"]])
source('scripts/D.R')
test[["model_summary"]]
source('scripts/D.R')
source('scripts/D.R')
saveRDS(montecarlo, "D_F2.rds")
montecarlo[[1]][["model_summary"]]
montecarlo[[1]][["model_summary"]][["coefficients"]]
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone","Estimate"] })), unlist(lapply(montecarlo, function(x) { length(x[["model_summary"]][["coefficients"]]["flood_prone","Pr(>|t|)"]) })))
montecarlo[[1]][["model_summary"]][["coefficients"]]["flood_prone","Estimate"]
montecarlo[[1]][["model_summary"]][["coefficients"]]
montecarlo[[1]][["model_summary"]][["coefficients"]]["flood_prone"]
montecarlo[[1]][["model_summary"]][["coefficients"]]["flood_prone",]
montecarlo[[1]][["model_summary"]][["coefficients"]]["flood_prone1",]
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { length(x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]) })))
lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]})
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]}))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { length(x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]) })))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]}))
unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] }))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]) })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]) }))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]) })
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]
)
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
source('scripts/D.R')
source('scripts/D.R')
source('scripts/D.R')
saveRDS(montecarlo, 'D_F3.rds')
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
hist(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
D_unmatch <- function(df) {
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(df, des_vars)
## Do the linear regression on the samples #
model            <- doRegression(df, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
return(list(
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary,
))
}
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1\
,0) }))
flood_data_subsets <- list('F1' = flood_sub_1, 'F2' = flood_sub_2, 'F3' = flood_sub_3)
flood_data_subsets <- Map(cbind, flood_data_subsets, treatment = lapply(flood_data_subsets, function(df) { df$treatment <- ifelse(df$flood_prone == 1,1,0) }))
D_unmatch(flood_data_subsets[["F3"]])
data <- data.frame()
D_unmatch(flood_data_subsets[["F3"]])
D_unmatch <- function(df) {
start.time <- Sys.time()
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(df, des_vars)
## Do the linear regression on the samples #
model            <- doRegression(df, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
return(list(
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary,
))
}
D_unmatch(flood_data_subsets[["F3"]])
D_unmatch <- function(df) {
start.time <- Sys.time()
## Make some descriptive statistics about the data
descriptives     <- doDescriptives(df, des_vars)
## Do the linear regression on the samples #
model            <- doRegression(df, model_formula, partial_strings)
fit              <- model[['fit']]
partials         <- model[['partials']]
fit_summary      <- summary(fit)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
return(list(
'descriptives' = descriptives,
'model_fit' = fit,
'model_partials' = partials,
'model_summary' = fit_summary
))
}
D_unmatch(flood_data_subsets[["F3"]])
test <- D_unmatch(flood_data_subsets[["F3"]])
test[["model_summary"]]
test[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]
plot(unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(montecarlo, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
abline(v = test[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"], h = test[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|"])
abline(v = test[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"], h = test[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"])
abline(h = 0.1)
test[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]
test[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]
test[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]
test[["model_summary"]]
F3 <- D_unmatch(flood_data_subsets[["F3"]])
F2 <- D_unmatch(flood_data_subsets[["F2"]])
F3
F2
F2[["model_summary"]]
F3[["model_summary"]]
huxreg(c(F2, F3))
huxreg(list(F2, F3))
huxreg(list(F2[["model_summary"]], F3[["model_summary"]]))
montecarlo[[1]][["balance_summary_standardised"]]
plot(montecarlo[[1]][["balance_summary_standardised"]])
montecarlo[[1]][["balance_summary_standardised"]][["reduction"]]
huxtable(montecarlo[[1]][["balance_summary_standardised"]][["reduction"]])
table <- huxtable(montecarlo[[1]][["balance_summary_standardised"]][["reduction"]])
table["building_floor_area"]
table[1:4,]
table <- huxtable(montecarlo[[1]][["balance_summary_standardised"]][["reduction"]], add_colnames = TRUE, add_rownames = TRUE)
table[1:4,]
before <- readRDS("D_F2.rds")
after <- readRDS("D_F3.rds")
lapply(before, function(x) { x[[]]})
lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })
unlist(lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] }))
hist(unlist(lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })))
plot(unlist(lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
plot(unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"] })), unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"] })))
source('scripts/D.R')
source('scripts/D.R')
source('scripts/D.R')
source('scripts/D.R')
source('scripts/D.R')
single_unmatched_D
single_unmatched_D[["model_summary"]]
single_unmatched_D <- D_unmatch(flood_data_subsets[["F2"]])
single_unmatched_D[["model_summary"]]
source('scripts/D.R')
before <- readRDS("D_F2.rds")
after <- readRDS("D_F3.rds")
hist(unlist(lapply(before, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]})))
unmatched_before_D[["model_summary"]]
unmatched_ater_D[["model_summary"]]
unmatched_after_D[["model_summary"]]
hist(unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]})))
plot(unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]})), unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]})))
mean(unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Estimate"]})))
mean(unlist(lapply(after, function(x) { x[["model_summary"]][["coefficients"]]["flood_prone1","Pr(>|t|)"]})))
