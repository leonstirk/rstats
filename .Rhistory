setwd('~/Desktop/projects/matching_estimator_flooding_south_dunedin_2000_2018')
source('scripts/partial_plots.R')
source('scripts/partial_plots.R')
par(mfrow=c(2,2))
termplot(lm.cars, partial.resid=TRUE, col.res = "purple")
mtcarsC <- transform(mtcars, wtC = wt-mean(wt), dispC = disp-mean(disp), dratC=drat-mean(drat), qsecC=qsec-mean(qsec))
head(mtcars)
head(mtcarsC)
mean(mtcarsC$disp)
mean(mtcarsC$wt)
2.62 - mean(mtcars$wt)
160 - mean(mtcars$disp)
lm.terms.cars <- lm(formula = mpg ~ wtC + dispC + dratC + qsecC, data = mtcarsC)
par(mfrow=c(2,2))
termplot(lm.terms.cars)
termplot(lm.cars)
termplot(lm.terms.cars)
termplot(lm.cars)
termplot(lm.terms.cars)
termplot(lm.cars)
termplot(lm.terms.cars)
coef(lm.terms.cars)
coef(lm.cars)
lm.terms.cars$model
lm.terms.cars$model[1,-1]
coef(lm.terms.cars)[-1]
coef(lm.terms.cars)[-1]*lm.terms.cars$model[1,-1]
t(lm.terms.cars$model[1,-1])
t
rm(mtcarsC)
rm(lm.terms.cars)
predict(lm.cars, type = "terms")
pterms <- predict(lm.cars, type = "terms")
pterms
class(pterms)
resid(lm.cars)
partial.residuals <- apply(pterms,1,function(x) { x + resid(lm.cars) })
partial.residuals
partial.residuals <- apply(pterms,2,function(x) { x + resid(lm.cars) })
partial.residuals
lm.cars
lm.cars$terms
lm.cars$coefficients
lm.cars$coefficients[1,-1]
lm.cars$coefficients[-1]
length(lm.cars$coefficients[-1])
lm.cars$model
lm.cars$model[,1]
lm.cars$model[,2]
partial.residuals[,i]
partial.residuals[,1]
partial.residuals
par(mfrow=c(2,2))
for(i in 1:length(lm.cars$coefficients[-1])){
plot(x=lm.cars$model[,(i+1)],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ lm.cars$model[,(i+1)]), col="red")
}
source('scripts/DiD.R')
results[["FP_NFP"]][["model_fit"]][[1]]
crPlots(results[["FP_NFP"]][["model_fit"]][[1]])
termsplot(results[["FP_NFP"]][["model_fit"]][[1]])
library(car)
termplot(results[["FP_NFP"]][["model_fit"]][[1]])
par(mfrow=c(2,2))
termplot(results[["FP_NFP"]][["model_fit"]][[1]])
install.packages("effects")
effects(results[["FP_NFP"]][["model_fit"]][[1]])
hi <- effects(results[["FP_NFP"]][["model_fit"]][[1]])
effects('land_area', results[["FP_NFP"]][["model_fit"]][[1]])
effects('land_area', results[["FP_NFP"]][["model_fit"]][[1]], partial.residuals = T)
effect('land_area', results[["FP_NFP"]][["model_fit"]][[1]], partial.residuals = T)
effects('land_area', results[["FP_NFP"]][["model_fit"]][[1]], partial.residuals = T)
plot(hi)
library(effects)
effect('land_area', results[["FP_NFP"]][["model_fit"]][[1]], partial.residuals = T)
class(results[["FP_NFP"]][["model_fit"]][[1]])
effect('land_area', results[["FP_NFP"]][["model_fit"]][[1]], partial.residuals = T)
effect('land_area', results[["FP_NFP"]][["model_fit"]][[1]])
effect("land_area", results[["FP_NFP"]][["model_fit"]][[1]])
fit <- lm(model_formula, data = FP_NFP)
model_formula     <- as.formula(paste("ln_sale_price ~ after_flood*treatment+ ",model_all))
fit <- lm(model_formula, data = FP_NFP)
rm(hi)
effect("land_area", fit)
eff <- effect("land_area", fit, partial.residuals = T)
plot(eff)
eff <- effect("I(land_area^2)", fit, partial.residuals = T)
plot(eff)
fit
eff <- effect("I(land_area^2)", fit, partial.residuals = T)
plot(eff)
model_formula
model_formula <- ln_sale_price ~ after_flood * treatment + building_floor_area + land_area + median_income + homeowner_rate + arterial_street + offstreet_parking + deck + good_land_view + good_water_view + bedrooms + bathrooms + period_built + contour + dist_cbd + sale_year
fit <- lm(model_formula, data = FP_NFP)
eff <- effect("land_area", fit, partial.residuals = T)
plot(eff)
fit
eff <- effect("after_flood:treatment", fit, partial.residuals = T)
plot(eff)
warnings()
fit
model_formula <- ln_sale_price ~ after_flood * treatment + poly(building_floor_area,2) + poly(land_area,2) + poly(median_income,2) + homeowner_rate + arterial_street + offstreet_parking + deck + good_land_view + good_water_view + bedrooms + bathrooms + period_built + contour + dist_cbd + sale_year
fit <- lm(model_formula, data = FP_NFP)
eff <- effect("building_floor_area", fit, partial.residuals = T)
fit
eff <- effect("poly(building_floor_area, 2)1", fit, partial.residuals = T)
eff <- effect("poly(building_floor_area, 2)1", fit, partial.residuals = T)
eff <- effect("homeowner_rate", fit, partial.residuals = T)
plot(eff)
?effect
eff <- effect("poly(building_floor_area, 2)", fit, partial.residuals = T)
plot(eff)
eff <- effect("poly(land_area, 2)", fit, partial.residuals = T)
plot(eff)
fit
eff <- effect("poly(building_floor_area, 2)", fit, partial.residuals = T)
plot(eff)
eff <- effect("poly(building_floor_area, 2)", fit)
plot(eff)
eff <- effect("poly(building_floor_area, 2)", fit, partial.residuals = TRUE)
plot(eff)
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide')
)
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.35))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.5))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.02))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.1))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.2))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.15))
plot(eff, partial.residual=list(pch=".", col="#FF00FF80",fig.show='hide', span=0.12))
plot(eff, partial.residual=list(pch=".", span=0.12))
plot(eff, partial.residual=list(pch=".", span=0.2))
eff <- effect("poly(land_area, 2)", fit, partial.residuals = TRUE)
plot(eff, partial.residual=list(pch=".", span=0.2))
plot(eff, partial.residual=list(pch=".", span=0.5))
plot(eff, partial.residual=list(pch="."))
eff <- effect("after_flood1:treatment", fit, partial.residuals = TRUE)
eff <- effect("after_flood1*treatment", fit, partial.residuals = TRUE)
eff <- effect(c("after_flood1", "treatment"), fit, partial.residuals = TRUE)
eff <- effect(c("after_flood", "treatment"), fit, partial.residuals = TRUE)
eff <- effect(c("after_flood1", "treatment"), fit, partial.residuals = TRUE)
model_formula
eff <- effect(c("after_flood", "treatment"), fit, partial.residuals = TRUE)
eff <- Effect(c("after_flood", "treatment"), fit, partial.residuals = TRUE)
plot(eff)
eff <- Effect(c("treatment", "after_flood"), fit, partial.residuals = TRUE)
plot(eff)
class(flood_sub$after_flood)
class(flood_sub$treat)
class(results[["FP_NFP"]][["model_data"]][["unmatched_data"]]$treatment)
class(results[["FP_NFP"]][["model_data"]][["unmatched_data"]]$after_flood)
eff <- Effect(c("after_flood", "treatment"), fit, partial.residuals = TRUE)
plot(eff)
eff <- Effect(c("treatment", "after_flood"), fit, partial.residuals = TRUE)
plot(eff)
fit
summary(fit)
pterms <- predict(fit, type = "terms")
pterms
partial.residuals <- apply(pterms,2,function(x)x+resid(fit))
partial.residuals
par(mfrow=c(3,3))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,(i+1)],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,(i+1)]), col="red")
}
fit$coefficients[-1]
fit$coefficients
fit$model[,(i+1)]
fit$model
fit$model[,2]
fit$model[,3]
fit$model[,4]
partial.residuals[,0]
partial.residuals[,1]
partial.residuals[,2]
partial.residuals[,3]
partial.residuals[,4]
partial.residuals
names(partial.residuals)
partial.residuals[-1,]
partial.residuals[,-1]
partial.residuals
pterms
pterms
ncol(pterms)
model_formula
summary(fit)
length(fit$coefficients)
pterms
partial.residuals
ncol(partial.residuals)
ncol(pterms)
length(fit$model)
fit$model
length(fit$model)
fit$model[1,1]
fit$model[1,2]
fit$model[1,3]
fit$model[1,4]
fit$model[1,4][1]
fit$residuals
model_all
model_formula
model_formula     <- as.formula(paste("ln_sale_price ~ after_flood*treatment+ ",model_all))
model_formula
model_formula
model_formula <- ln_sale_price ~ after_flood * treatment + building_floor_area + land_area + median_income + homeowner_rate + offstreet_parking + deck + bedrooms + bathrooms + period_built + dist_cbd + I(building_floor_area^2) + I(land_area^2) + I(median_income^2) + sale_year
fit <- lm(model_formula, data = FP_NFP)
fit <- lm(model_formula, data = results[["FP_NFP"]][["model_data"]][["matched_data"]])
results[["FP_NFP"]][["model_data"]][["matched_data"]]
summary(fit)
pterms <- predict(fit, type = 'terms')
partial.residuals <- apply(pterms,2,function(x)x+resid(fit))
data <- FP_NFP
data$after_flood:treatment <- data$after_flood*data$treatment
data$after_flood:treatment <- as.numeric(as.character(data$after_flood))*as.numeric(as.character(data$treatment))
data$after_flood_treatment <- as.numeric(as.character(data$after_flood))*as.numeric(as.character(data$treatment))
model_formula
model_formula <- ln_sale_price ~ after_flood_treatment + building_floor_area + land_area + median_income + homeowner_rate + offstreet_parking + deck + bedrooms + bathrooms + period_built + dist_cbd + I(building_floor_area^2) + I(land_area^2) + I(median_income^2) + sale_year
fit <- lm(model_formula, data = FP_NFP)
fit <- lm(model_formula, data = data)
pterms <- predict(fit, type = "terms")
partial.residuals <- apply(pterms,2,function(x)x+resid(fit))
par(mfrow=c(3,3))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,(i+1)],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,(i+1)]), col="red")
}
pterms
ncol(pterms)
pterms[-1,]
pterms[0,]
pterms[0
]
pterms[0,]
ncol(pterms)
partial.residuals
partial.residuals[0,]
pterms[0,]
pterms
model_formula
fit
fit$model
plot(x=fit$model[,(i+1)],y=partial.residuals[,i], col="purple", ylim=c(-10,10))abline(lm(partial.residuals[,i] ~ fit$model[,(i+1)]), col="red")
plot(x=fit$model[,(i+1)],y=partial.residuals[,i], col="purple", ylim=c(-10,10)) abline(lm(partial.residuals[,i] ~ fit$model[,(i+1)]), col="red")
plot(x=fit$model[,(2)],y=partial.residuals[,1], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,1] ~ fit$model[,(2)]), col="red")
fit$model
plot(x=fit$model[,(2)],y=partial.residuals[,1], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,1] ~ fit$model[,(2)]), col="red")
fit$model[,2]
fit$model[0,2]
fit$model[0,]
partial.residuals[0,]
fit$model[,-1]
fit$model[,-1][0]
fit$model[,-1][,]
fit$model[,-1][1,]
par(mfrow=c(2,2))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,-1][,i],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,-1][,i]), col="red")
}
par(mfrow=c(3,3))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,-1][,i],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,-1][,i]), col="red")
}
fit$summary
summary(fit)
par(mfrow=c(3,4))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,-1][,i],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,-1][,i]), col="red")
}
par(mfrow=c(4,4))
for(i in 1:length(fit$coefficients[-1])){
plot(x=fit$model[,-1][,i],y=partial.residuals[,i], col="purple", ylim=c(-10,10))
abline(lm(partial.residuals[,i] ~ fit$model[,-1][,i]), col="red")
}
